apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.cts.countryinfos"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "androidx.core:core-ktx:$rootProject.corektxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"


    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleExtensionVersion"
    implementation "androidx.lifecycle:lifecycle-common:$rootProject.lifecycleExtensionVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycleExtensionVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleExtensionVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpLoggingVersion"


    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.recyclerview:recyclerview-selection:$rootProject.recyclerViewVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"

    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"


    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test:runner:$rootProject.testRunnerVersion"
    //To Mock the kotlin classes as all Kotlin classes are defined final in default
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoInlineVersion"
    //To solve the java.lang.IllegalStateException: Mockito.any() must not be null while writing the test cases..
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitokotlinCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
    //To test coroutines suspend function
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutinesVersion"
}
